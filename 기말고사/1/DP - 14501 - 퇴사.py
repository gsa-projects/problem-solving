N = int(input())
T = [0] * (N + 1)
P = [0] * (N + 1)
D = [0] * (N + 2)
# note: 예제 입력 2에서 1, 10 이라는 T, P를 볼 수 있듯이
#   - 상담은 이전~다음 이렇게 건너서 시간 계산하지 않고 그냥 딱 딱 셀로 판정됨
#   - 그래서 딱 N에 맞춰 끝나는 상담을 D[N] = max(~~~, D[N + 1]) 처리할 방법이 필요함 -> D의 길이가 하나 더 필요

for i in range(1, N + 1):
    T[i], P[i] = map(int, input().split())

# note: range(N, -1, -1) 가 아님
#   - 이건 N~0까지 보겠다는 건데, T, P, D를 굳이 1씩 늘려서 정의한 건 1부터 보기 위함이므로 range(N, 0, -1)
#   - range(N, -1, -1) -> range(N, -1, 0) 같은 실수 ㄴㄴ
for i in range(N, 0, -1):
    if i + T[i] > N + 1:
        D[i] = D[i + 1]
        # note: D[i] = 0 하면 안됨
        #   - 위의 코드는 맨 오른쪽에서 안될 때는 성립하지만, 중간에 시간이 엄청 걸리는 상담이 있을 때는 그 상담을 '안 받는다' 이므로.
    else:
        D[i] = max(D[i + T[i]] + P[i], D[i + 1])

print(D[1])
